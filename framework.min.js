const remove=(e,t)=>{const n=e.indexOf(t);return-1===n?null:(e.splice(n,1),t)},array=e=>[...Array(e)].map(((e,t)=>t)),assert=(e,t)=>{if(!e)throw new Error(t)},TEMP_DIV=document.createElement("div"),createComponent=(e,t)=>{const n=document.createElement("div");n.innerHTML=t;const r={};return n.querySelectorAll("[--id]").forEach((e=>r[e.getAttribute("--id")]=e)),r.component=n.children[0],n.childNodes.forEach((t=>e.appendChild(t))),r},createState=e=>{let t=e,n=!1;const r=[];return[()=>t,e=>{if(!n){t=e,n=!0;try{for(let e=r.length-1;e>=0;e--)r[e][0].isConnected?r[e][1](t):r.splice(e,1)}finally{n=!1}}},(e,i)=>{assert(e instanceof Element,"events must be subscribed to dom elements, so they can be automatically unsubscribed"),r.push([e,i]),n=!0;try{i(t)}finally{n=!1}}]},createAnimation=e=>{let t,n=!1;const r=i=>{if(null===t)t=i;else{let r=(i-t)/1e3;if(t=i,e(r))return void(n=!1)}window.requestAnimationFrame(r)};return()=>{n||(n=!0,t=null,window.requestAnimationFrame(r))}};